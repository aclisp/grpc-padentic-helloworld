// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router.proto

// this package is used as an internal server to simulate server-to-server RPCs
// the difference from helloworld proto is that helloworld is the client-to-server APIs

package com_github_aclisp_grpcpadentic_router

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Route struct {
	ClientIdentity       string   `protobuf:"bytes,1,opt,name=client_identity,json=clientIdentity,proto3" json:"client_identity,omitempty"`
	ServerAddress        string   `protobuf:"bytes,2,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{0}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetClientIdentity() string {
	if m != nil {
		return m.ClientIdentity
	}
	return ""
}

func (m *Route) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

type GetRouteReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRouteReq) Reset()         { *m = GetRouteReq{} }
func (m *GetRouteReq) String() string { return proto.CompactTextString(m) }
func (*GetRouteReq) ProtoMessage()    {}
func (*GetRouteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{1}
}

func (m *GetRouteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRouteReq.Unmarshal(m, b)
}
func (m *GetRouteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRouteReq.Marshal(b, m, deterministic)
}
func (m *GetRouteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRouteReq.Merge(m, src)
}
func (m *GetRouteReq) XXX_Size() int {
	return xxx_messageInfo_GetRouteReq.Size(m)
}
func (m *GetRouteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRouteReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRouteReq proto.InternalMessageInfo

type GetRouteRes struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRouteRes) Reset()         { *m = GetRouteRes{} }
func (m *GetRouteRes) String() string { return proto.CompactTextString(m) }
func (*GetRouteRes) ProtoMessage()    {}
func (*GetRouteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{2}
}

func (m *GetRouteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRouteRes.Unmarshal(m, b)
}
func (m *GetRouteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRouteRes.Marshal(b, m, deterministic)
}
func (m *GetRouteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRouteRes.Merge(m, src)
}
func (m *GetRouteRes) XXX_Size() int {
	return xxx_messageInfo_GetRouteRes.Size(m)
}
func (m *GetRouteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRouteRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetRouteRes proto.InternalMessageInfo

func (m *GetRouteRes) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

// AddRoute adds a route the client is from the server
type AddRouteReq struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRouteReq) Reset()         { *m = AddRouteReq{} }
func (m *AddRouteReq) String() string { return proto.CompactTextString(m) }
func (*AddRouteReq) ProtoMessage()    {}
func (*AddRouteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{3}
}

func (m *AddRouteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRouteReq.Unmarshal(m, b)
}
func (m *AddRouteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRouteReq.Marshal(b, m, deterministic)
}
func (m *AddRouteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRouteReq.Merge(m, src)
}
func (m *AddRouteReq) XXX_Size() int {
	return xxx_messageInfo_AddRouteReq.Size(m)
}
func (m *AddRouteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRouteReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddRouteReq proto.InternalMessageInfo

func (m *AddRouteReq) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type AddRouteRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRouteRes) Reset()         { *m = AddRouteRes{} }
func (m *AddRouteRes) String() string { return proto.CompactTextString(m) }
func (*AddRouteRes) ProtoMessage()    {}
func (*AddRouteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{4}
}

func (m *AddRouteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRouteRes.Unmarshal(m, b)
}
func (m *AddRouteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRouteRes.Marshal(b, m, deterministic)
}
func (m *AddRouteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRouteRes.Merge(m, src)
}
func (m *AddRouteRes) XXX_Size() int {
	return xxx_messageInfo_AddRouteRes.Size(m)
}
func (m *AddRouteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRouteRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddRouteRes proto.InternalMessageInfo

type DelRouteReq struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRouteReq) Reset()         { *m = DelRouteReq{} }
func (m *DelRouteReq) String() string { return proto.CompactTextString(m) }
func (*DelRouteReq) ProtoMessage()    {}
func (*DelRouteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{5}
}

func (m *DelRouteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRouteReq.Unmarshal(m, b)
}
func (m *DelRouteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRouteReq.Marshal(b, m, deterministic)
}
func (m *DelRouteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRouteReq.Merge(m, src)
}
func (m *DelRouteReq) XXX_Size() int {
	return xxx_messageInfo_DelRouteReq.Size(m)
}
func (m *DelRouteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRouteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelRouteReq proto.InternalMessageInfo

func (m *DelRouteReq) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type DelRouteRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRouteRes) Reset()         { *m = DelRouteRes{} }
func (m *DelRouteRes) String() string { return proto.CompactTextString(m) }
func (*DelRouteRes) ProtoMessage()    {}
func (*DelRouteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{6}
}

func (m *DelRouteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRouteRes.Unmarshal(m, b)
}
func (m *DelRouteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRouteRes.Marshal(b, m, deterministic)
}
func (m *DelRouteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRouteRes.Merge(m, src)
}
func (m *DelRouteRes) XXX_Size() int {
	return xxx_messageInfo_DelRouteRes.Size(m)
}
func (m *DelRouteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRouteRes.DiscardUnknown(m)
}

var xxx_messageInfo_DelRouteRes proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Route)(nil), "com.github.aclisp.grpcpadentic.router.Route")
	proto.RegisterType((*GetRouteReq)(nil), "com.github.aclisp.grpcpadentic.router.GetRouteReq")
	proto.RegisterType((*GetRouteRes)(nil), "com.github.aclisp.grpcpadentic.router.GetRouteRes")
	proto.RegisterType((*AddRouteReq)(nil), "com.github.aclisp.grpcpadentic.router.AddRouteReq")
	proto.RegisterType((*AddRouteRes)(nil), "com.github.aclisp.grpcpadentic.router.AddRouteRes")
	proto.RegisterType((*DelRouteReq)(nil), "com.github.aclisp.grpcpadentic.router.DelRouteReq")
	proto.RegisterType((*DelRouteRes)(nil), "com.github.aclisp.grpcpadentic.router.DelRouteRes")
}

func init() { proto.RegisterFile("router.proto", fileDescriptor_367072455c71aedc) }

var fileDescriptor_367072455c71aedc = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x6e, 0x2b, 0x0d, 0x3a, 0xb1, 0x15, 0xf6, 0x14, 0x72, 0x2a, 0x0b, 0xc5, 0x1e, 0x64, 0x0f,
	0xf1, 0x09, 0x2a, 0x05, 0xf1, 0x68, 0x3c, 0x78, 0x2c, 0xe9, 0xee, 0x50, 0x17, 0x62, 0x13, 0x77,
	0xb6, 0x82, 0xaf, 0xec, 0x53, 0x48, 0x66, 0x13, 0x9a, 0x63, 0x02, 0xde, 0x32, 0x5f, 0xe6, 0xfb,
	0xd9, 0x6f, 0x59, 0xb8, 0x75, 0xd5, 0xd9, 0xa3, 0x53, 0xb5, 0xab, 0x7c, 0x25, 0xd6, 0xba, 0xfa,
	0x54, 0x47, 0xeb, 0x3f, 0xce, 0x07, 0x55, 0xe8, 0xd2, 0x52, 0xad, 0x8e, 0xae, 0xd6, 0x75, 0x61,
	0xf0, 0xe4, 0xad, 0x56, 0x61, 0x59, 0xbe, 0xc3, 0x3c, 0x6f, 0xbe, 0xc4, 0x3d, 0xdc, 0xe9, 0xd2,
	0xe2, 0xc9, 0xef, 0x2d, 0x6f, 0xf8, 0x9f, 0x64, 0xba, 0x9a, 0x6e, 0x6e, 0xf2, 0x65, 0x80, 0x5f,
	0x5a, 0x54, 0xac, 0x61, 0x49, 0xe8, 0xbe, 0xd1, 0xed, 0x0b, 0x63, 0x1c, 0x12, 0x25, 0x33, 0xde,
	0x5b, 0x04, 0x74, 0x1b, 0x40, 0xb9, 0x80, 0xf8, 0x19, 0x3d, 0x6b, 0xe7, 0xf8, 0x25, 0xdf, 0xfa,
	0x23, 0x89, 0x1d, 0x44, 0x1c, 0x80, 0x92, 0xe9, 0xea, 0x6a, 0x13, 0x67, 0x0f, 0x6a, 0x50, 0x5c,
	0x15, 0x04, 0x5a, 0xae, 0x7c, 0x85, 0x78, 0x6b, 0x4c, 0xe7, 0x21, 0x9e, 0x60, 0xce, 0x3f, 0x38,
	0xf8, 0x58, 0xcd, 0x40, 0x6d, 0x62, 0x5f, 0x24, 0xd9, 0x61, 0x87, 0xe5, 0x7f, 0x3b, 0x5c, 0x24,
	0x29, 0xfb, 0x9d, 0x41, 0xc4, 0x83, 0x13, 0x1e, 0xae, 0xbb, 0x8e, 0x44, 0x36, 0x50, 0xba, 0xd7,
	0x71, 0x3a, 0x9e, 0x43, 0x72, 0xd2, 0xb8, 0x76, 0x27, 0x1e, 0xec, 0xda, 0x6b, 0x3d, 0x1d, 0xcf,
	0x69, 0x5d, 0xbb, 0x16, 0x06, 0xbb, 0xf6, 0x6e, 0x22, 0x1d, 0xcf, 0x21, 0x39, 0x39, 0x44, 0xfc,
	0x36, 0x1e, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x8d, 0x06, 0xe4, 0x2b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouterClient is the client API for Router service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterClient interface {
	GetRoute(ctx context.Context, in *GetRouteReq, opts ...grpc.CallOption) (*GetRouteRes, error)
	AddRoute(ctx context.Context, in *AddRouteReq, opts ...grpc.CallOption) (*AddRouteRes, error)
	DelRoute(ctx context.Context, in *DelRouteReq, opts ...grpc.CallOption) (*DelRouteRes, error)
}

type routerClient struct {
	cc *grpc.ClientConn
}

func NewRouterClient(cc *grpc.ClientConn) RouterClient {
	return &routerClient{cc}
}

func (c *routerClient) GetRoute(ctx context.Context, in *GetRouteReq, opts ...grpc.CallOption) (*GetRouteRes, error) {
	out := new(GetRouteRes)
	err := c.cc.Invoke(ctx, "/com.github.aclisp.grpcpadentic.router.Router/GetRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routerClient) AddRoute(ctx context.Context, in *AddRouteReq, opts ...grpc.CallOption) (*AddRouteRes, error) {
	out := new(AddRouteRes)
	err := c.cc.Invoke(ctx, "/com.github.aclisp.grpcpadentic.router.Router/AddRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routerClient) DelRoute(ctx context.Context, in *DelRouteReq, opts ...grpc.CallOption) (*DelRouteRes, error) {
	out := new(DelRouteRes)
	err := c.cc.Invoke(ctx, "/com.github.aclisp.grpcpadentic.router.Router/DelRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouterServer is the server API for Router service.
type RouterServer interface {
	GetRoute(context.Context, *GetRouteReq) (*GetRouteRes, error)
	AddRoute(context.Context, *AddRouteReq) (*AddRouteRes, error)
	DelRoute(context.Context, *DelRouteReq) (*DelRouteRes, error)
}

// UnimplementedRouterServer can be embedded to have forward compatible implementations.
type UnimplementedRouterServer struct {
}

func (*UnimplementedRouterServer) GetRoute(ctx context.Context, req *GetRouteReq) (*GetRouteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoute not implemented")
}
func (*UnimplementedRouterServer) AddRoute(ctx context.Context, req *AddRouteReq) (*AddRouteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRoute not implemented")
}
func (*UnimplementedRouterServer) DelRoute(ctx context.Context, req *DelRouteReq) (*DelRouteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelRoute not implemented")
}

func RegisterRouterServer(s *grpc.Server, srv RouterServer) {
	s.RegisterService(&_Router_serviceDesc, srv)
}

func _Router_GetRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).GetRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.aclisp.grpcpadentic.router.Router/GetRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).GetRoute(ctx, req.(*GetRouteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Router_AddRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRouteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).AddRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.aclisp.grpcpadentic.router.Router/AddRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).AddRoute(ctx, req.(*AddRouteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Router_DelRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelRouteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).DelRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.aclisp.grpcpadentic.router.Router/DelRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).DelRoute(ctx, req.(*DelRouteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Router_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.aclisp.grpcpadentic.router.Router",
	HandlerType: (*RouterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRoute",
			Handler:    _Router_GetRoute_Handler,
		},
		{
			MethodName: "AddRoute",
			Handler:    _Router_AddRoute_Handler,
		},
		{
			MethodName: "DelRoute",
			Handler:    _Router_DelRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "router.proto",
}
